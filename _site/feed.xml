<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gulácsi András</title>
    <description>Gulácsi András vagyok. Geoinformatikusként a legújabb web-alapú megoldásokat alkalmazom a földrajzi kutatásban, a földrajzi adatok feldolgozására és megjelenítésére a JavaScript nyelv erejével. Az alacsony színvonalú, elavult egyetemi tömegoktatás nem képes megfelelni
 a jelen kihívásainak és nem aknázza ki a legújabb IT-technológiákban rejlő nagy
 lehetőségeket. A tudásom 90%-át nem az egyetemen szereztem, programozni is magamtól
 tanultam meg. Az írásaimban és a készülő könyvemben az ideológiai alapú, utópisztikus
 gondolkodás ellen veszem fel a küzdelmet a tények, a tapasztalatok és a józan ész
 segítségével, hogy ne váljon a pusztító ideológiák martalékává a társadalom,
 szenvedést és nyomort hagyva maga után. A New Geographer – Új Geográfus blog
 egy újszerű szemléletben egyesíti a földrajzot az informatikával és a webfejlesztéssel.
</description>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>A Google Earth Engine alkalmazása a geoinformatikában, 3. rész: JavaScript folytatás.</title>
        <description>&lt;p&gt;Ajánlott irodalom:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Brian W. Kernighan - Dennis M. Richie: &lt;strong&gt;A C programozási nyelv. 2. kiadás.&lt;/strong&gt; - Műszaki Kiadó, Budapest.&lt;/li&gt;
  &lt;li&gt;Benedek Zoltán - Levendovszky Tihamér (2013). &lt;strong&gt;Szoftverfejlesztés C++ nyelven.&lt;/strong&gt; SZAK Kiadó Kft., Bicske.&lt;/li&gt;
  &lt;li&gt;David Flanagan (2011). &lt;strong&gt;JavaScript: The Definitive Guide. 6th Edition.&lt;/strong&gt; O’Reilly, USA.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Az összes kevert C/C++ kódot a &lt;strong&gt;C++ fordító&lt;/strong&gt;val fordítottam le (.cpp kiterjesztésű a forrásfájl). Így járjatok el ti is, különben nem fog működni!&lt;/p&gt;

&lt;p&gt;Ezeken kívül ajánlom még a &lt;a href=&quot;https://www.youtube.com/user/TheHUNTutorials/playlists&quot;&gt;TheHUNTutorials&lt;/a&gt; Youtube csatornáján megjelent és a &lt;a href=&quot;https://www.youtube.com/watch?v=-WwGMNGRHdw&quot;&gt;C++ Programming Tutorial Complete&lt;/a&gt; (angol!) című tutoriálokat.&lt;/p&gt;

&lt;p&gt;Ehhez az alábbi fejlesztői környezeteket ajánlom:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;C/C++ esetén: &lt;strong&gt;Code::Blocks 10.05&lt;/strong&gt;. A &lt;a href=&quot;https://sourceforge.net/projects/codeblocks/files/Binaries/10.05/Windows/&quot;&gt;codeblocks-10.05mingw-setup.exe&lt;/a&gt; változatot töltsd le! A MINGW a C++ fordító neve.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Háromféle &lt;strong&gt;paraméterátadás&lt;/strong&gt;t különböztetünk meg, ezek:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;A &lt;strong&gt;cím szerinti&lt;/strong&gt; paraméterátadás esetén &lt;strong&gt;mutatók&lt;/strong&gt; segítségével adjuk át a &lt;strong&gt;változók címeit&lt;/strong&gt; a függvénynek. Ezen keresztül az eredeti változók értékeit módosíthatjuk. A mutatók a legfontosabb nyelvi eszközök közé tartoznak, ismeretük elengedhetetlen minden programozó számára!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Az &lt;strong&gt;érték szerinti&lt;/strong&gt; paraméterátadás esetén lokális másolat készül a blokkon { } belül a függvényben, tehát az eredeti változóink értéke nem változik meg.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A C++ esetén bevezették a &lt;strong&gt;referencia szerinti&lt;/strong&gt; paraméterátadást a mutatók kiváltására, ahol a változóra egy &lt;strong&gt;alias&lt;/strong&gt; (álnév) segítségével hivatkozunk. A JavaScript-ben nincsenek mutatók, nem is férhetünk hozzá a memóriacímekhez.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;center&gt;&lt;em&gt;Az 1. C++ példa: Egyszerű függvények és a paraméterátadás bemutatása.&lt;/em&gt;&lt;/center&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* Header fájlok csatolása */&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;locale.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* A függvények prototípusai. Itt deklarálni kell őket,
 * hogy a fordító tudja, hogy használni fogjuk őket, és
 * megkeresi a függvények definícióit.
 */&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;terulet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Téglalap területének számítása.
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modosit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Referencia szerinti hivatkozás, típusnév&amp;amp;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modosit2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Itt érték szerinti paraméterátadás van.
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modosit3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Cím szerinti paraméterátadás.
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;setlocale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LC_ALL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hun&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Ékezetes karakterek miatt.
&lt;/span&gt;    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// A téglalap oldalai.
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;modosit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// b=30
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;modosit2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// b=30 marad!
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;modosit3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// b=5, az &amp;amp;b a 'b' változó memóriacíme.
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;A téglalap területe: %d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;terulet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; 50
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;getchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Egy billentyű lenyomására vár.
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Függvénydefiníciók.
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;terulet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Referencia szerinti paraméterátadás.
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modosit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;szam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;szam&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;szam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Negatív szám nem lehet.
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Érték szerinti paraméterátadás.
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modosit2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;szam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;szam&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;szam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Mutató szerinti paraméterátadás.
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modosit3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;szam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;szam&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;szam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ez hasonlít a C-ben használt nyelvi elemhez, a &lt;strong&gt;struktúrá&lt;/strong&gt;hoz (&lt;code class=&quot;highlighter-rouge&quot;&gt;struct&lt;/code&gt;). Az egyetlen különbség, hogy a struktúratagok hozzáférése &lt;strong&gt;publikus&lt;/strong&gt;, tehát kívülről megváltoztatható (és az öröklés is publikus). C++ szabvány esetén természetesen &lt;strong&gt;privát&lt;/strong&gt;tá, kívülről hozzáférhetetlenné tehetünk belső változókat (sőt az osztály esetén alapértelmezetten mindig privát a változók hozzáférése, de ezen változathatunk), és csak az általunk írt metódusokon férhetünk hozzájuk. Ez a biztonságot szolgálja.&lt;/p&gt;

&lt;center&gt;&lt;em&gt;A 2. C++ példa: A struktúra, a konstruktor, a destruktor, a metódus.&lt;/em&gt;&lt;/center&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* Header fájlok csatolása */&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;locale.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Teglalap&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Alapértelmezett konstruktor. Nem inicializálja a-t és b-t.
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Teglalap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* Saját konstruktor. A függvényneveket a fordító
     * a paramétereik és azok típusa szerint különbözteti meg.
     * Ezt a függvénynevek túlterhelésének nevezzük. */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Teglalap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* Destruktor a dinamikusan lefoglalt tárhelyek
     * felszabadítására (memóriaszivárgás ellen).
     * Az egyszerű változók felszabadításával nem kell törődnünk.
     */&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Teglalap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){};&lt;/span&gt; 

    &lt;span class=&quot;cm&quot;&gt;/* Ennek a terület függvénynek a hatóköre a struktúra belseje
     * a { } között, ugyanis blokk szintű hatókör van a C/C++-ban
     */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;terulet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* A this értékének kiírása. */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;this_erteke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%x&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;setlocale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LC_ALL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hun&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Ékezetes karakterek miatt.
&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Teglalap&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// A struktúra példányosítása.
&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a = %d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; a = 5
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b = %d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; b = 7
&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;A téglalap területe: %d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;terulet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; 35
&lt;/span&gt;	
    &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* a this értéke meg fog egyezni a z memóriacímével! */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this_erteke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%x&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
    &lt;span class=&quot;n&quot;&gt;getchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Néhány dolog magyarázatra szorul.&lt;/p&gt;

&lt;p&gt;Elsőként: kizárólag a példa kedvéért keverem a C és a C++ kódot (a struktúra helyett osztályt használj)! Ha nem tudod mit csinálsz, akkor ne keverd! Ez programozási szemszögből nem feltétlenül jó gyakorlat, mert komoly hibákat eredményezhet bizonyos esetekben. Például dinamikus memóriakezelésnél a &lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt;-t és a &lt;code class=&quot;highlighter-rouge&quot;&gt;delete&lt;/code&gt;-t soha ne keverjük a &lt;code class=&quot;highlighter-rouge&quot;&gt;malloc()&lt;/code&gt;-al és a &lt;code class=&quot;highlighter-rouge&quot;&gt;free()&lt;/code&gt;-vel!&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;this&lt;/strong&gt; a struktúra aktuális példányának (a &lt;code class=&quot;highlighter-rouge&quot;&gt;z&lt;/code&gt;-nek) belső mutatója, amivel a tagváltozókat és a taggfüggvényeket (más szóval metódusokat) érhetjük el a &lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt;&lt;/code&gt; (nyíl) operátor segítségével. Ez egy valódi mutató, amit a &lt;strong&gt;this&lt;/strong&gt; kulcsszóval helyettesítünk és jelen esetben a &lt;code class=&quot;highlighter-rouge&quot;&gt;z&lt;/code&gt; struktúra címére mutat. Bővebb magyarázat &lt;a href=&quot;https://www.youtube.com/watch?v=d4ts84MGyUc&quot;&gt;itt&lt;/a&gt; és &lt;a href=&quot;https://www.youtube.com/watch?v=I2-RmR7JRdc&quot;&gt;itt&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ez a rövid C kódrészlet talán jobban rámutat a lényegre:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* Egy egyszerű struktúra C-ben. */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Teglalap&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* a main()-ben: a Téglalap struktúra mutatója */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Teglalap&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elso&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Teglalap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elso&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* Helyette ezt is írhatnám: */&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x = %d, y = %d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;x = 50, y = 90&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Egy &lt;code class=&quot;highlighter-rouge&quot;&gt;struct Teglalap&lt;/code&gt; típusú struktúrát jelölő mutatót hoztam létre &lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt; néven. Ha &lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt; egy &lt;code class=&quot;highlighter-rouge&quot;&gt;Teglalap&lt;/code&gt; struktúrát címez, akkor &lt;code class=&quot;highlighter-rouge&quot;&gt;*p&lt;/code&gt; maga a struktúra (memóriacím, ahol &lt;code class=&quot;highlighter-rouge&quot;&gt;elso&lt;/code&gt; megtalálható), és &lt;code class=&quot;highlighter-rouge&quot;&gt;(*p).x&lt;/code&gt;, illetve &lt;code class=&quot;highlighter-rouge&quot;&gt;(*p).y&lt;/code&gt; az &lt;code class=&quot;highlighter-rouge&quot;&gt;elso&lt;/code&gt; struktúra tagjai/elemei. A zárójelre szükség van, mivel a &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; struktúratag operátor precedenciája magasabb, mint a &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; operátoré. A szintaxis egyszerűsítésére vezették be a &lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt;&lt;/code&gt; operátort (balról jobbra köt).&lt;/p&gt;

&lt;p&gt;A C++-ban a &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; ehhez hasonlóan a struktúra vagy az osztály példányát jelölő (annak kezdőcímét tároló) mutató. A 2. C++ példámban írhatnánk azt is (teljesen fölöslegesen, hiszen a &lt;code class=&quot;highlighter-rouge&quot;&gt;z.x&lt;/code&gt; sokkal egyszerűbb), hogy:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;n&quot;&gt;Teglalap&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;63&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A &lt;strong&gt;this&lt;/strong&gt; a struktúra aktuális példányának (a &lt;code class=&quot;highlighter-rouge&quot;&gt;z&lt;/code&gt;-nek) belső mutatója, amivel a tagváltozókat és a taggfüggvényeket (más szóval metódusokat) érhetjük el a &lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt;&lt;/code&gt; (nyíl) operátor segítségével. Ez egy valódi mutató, amit a &lt;strong&gt;this&lt;/strong&gt; kulcsszóval helyettesítünk és jelen esetben a &lt;code class=&quot;highlighter-rouge&quot;&gt;z&lt;/code&gt; struktúra címére mutat.&lt;/p&gt;

&lt;p&gt;A JavaScript-ben szintén létezik a &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt;. A &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; az éppen aktuális objektumpéldányra hivatkozik (teljesen automatikusan). Viszont nem mutató, mert a JS-ben nincsen mutató, ezért a &lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt;&lt;/code&gt; nyíl operátor helyett a &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; operátorral érhetjük el az objektum tulajdonságait a &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt;-en keresztül (vagyis: &lt;code class=&quot;highlighter-rouge&quot;&gt;this-&amp;gt;a&lt;/code&gt; helyett &lt;code class=&quot;highlighter-rouge&quot;&gt;this.a&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Az egységbe zárás lényege, a változók és a függvények együtt kezelése mellett, hogy &lt;strong&gt;szabályozzuk a változók hozzáférését&lt;/strong&gt;, hogy az osztályon kívülről ne lehessen megváltoztatni őket (&lt;strong&gt;public&lt;/strong&gt;, &lt;strong&gt;protected&lt;/strong&gt; és &lt;strong&gt;private&lt;/strong&gt; hozzáférés létezik). Miért előnyös ez? Nem lenne szerencsés, ha például egy bankszámla egyenlege lenullázható vagy negatívra állítható lenne kívülről (bár előnyös volna, ha hozzáadhatnánk &lt;code class=&quot;highlighter-rouge&quot;&gt;2E+11&lt;/code&gt; Ft-ot). A következő példaprogram egy nagyon egyszerű bankszámla osztályt valósít meg.&lt;/p&gt;

&lt;center&gt;&lt;em&gt;A 3. C++ példa: Az osztály és a hozzáférési szintek.&lt;/em&gt;&lt;/center&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;locale.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Bankszamla&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Alapértelmezetten private, kívülről nem hozzáférhető.
     * A private hozzáférést jelölő kulcsszó elhagyható. */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;egyenleg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Bankszamla&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Alapértelmezett konstruktor.
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// Saját konstruktor a változó inicializáláshoz.
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Bankszamla&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;egyenleg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Destruktor, a lefoglalt memóriahely felszabadításához.
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bankszamla&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// a ~ jel kell.
&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// A fizetés hozzáadása az egyenleghez.
&lt;/span&gt;    &lt;span class=&quot;kr&quot;&gt;inline&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hozzaadas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fizu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;egyenleg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fizu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    	
    &lt;span class=&quot;c1&quot;&gt;// Pénzlevonás fizetésnél.
&lt;/span&gt;    &lt;span class=&quot;kr&quot;&gt;inline&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;levonas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;koltseg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;egyenleg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;koltseg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Mennyi pénz van a számlámon?
&lt;/span&gt;    &lt;span class=&quot;kr&quot;&gt;inline&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getEgyenleg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;egyenleg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;setlocale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LC_ALL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hun&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
    &lt;span class=&quot;c1&quot;&gt;// Osztály példányosítása. Egyenleg: 2 millió Ft.
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Bankszamla&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2e+06&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* A . struktúra-adattag operátorral érhetjük el a változót.
     * Az osztályoknál is a . operátort használjuk a tagváltozók vagy
     * a metódusok eléréséhez */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;egyenleg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Hiba. Nem engedi a fordító!
&lt;/span&gt;	
    &lt;span class=&quot;c1&quot;&gt;// Az osztály getEgyenleg() metódusának meghívása az y példányra.
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Az egyenlegem: %d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getEgyenleg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;levonas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;34567&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Az egyenlegem a levonás után: %d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getEgyenleg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;getchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Az inline kulcsszó azt jelöli, hogy az osztályon belül definiáljuk a metódusokat. A másik lehetőség, hogy csak a függvényprototípust adjuk meg az osztályon belül, és utólag definiáljuk a függvényeket.&lt;/p&gt;

&lt;p&gt;A &lt;code class=&quot;highlighter-rouge&quot;&gt;Bankszamla(int x): egyenleg(x) {};&lt;/code&gt; kódrészlet ezzel egyenértékű: &lt;code class=&quot;highlighter-rouge&quot;&gt;Bankszamla(int x) { this-&amp;gt;egyenleg = x; };&lt;/code&gt;. A &lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;/code&gt; utáni rész egy inicializálási lista, az &lt;code class=&quot;highlighter-rouge&quot;&gt;egyenleg&lt;/code&gt; változónak értékül adom az &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; értékét (az &lt;code class=&quot;highlighter-rouge&quot;&gt;egyenleg&lt;/code&gt; nevet is adhatnánk az &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; változónak, hiszen a &lt;code class=&quot;highlighter-rouge&quot;&gt;this-&amp;gt;&lt;/code&gt; az &lt;code class=&quot;highlighter-rouge&quot;&gt;egyenleg&lt;/code&gt; tagváltozóra mutat, és nem a függvényparaméterre.&lt;/p&gt;

&lt;p&gt;A függvénynevek és az operátorok túlterhelésével, az alapértelmezett függvényargumentumokkal, az örökléssel, a kivételkezeléssel stb. nem foglalkozom itt.&lt;/p&gt;

&lt;p&gt;Az objektumok kezdeti értékadásaiért (inicializálás) speciális tagfüggvények, a &lt;strong&gt;konstruktor&lt;/strong&gt;ok felelnek. A konstruktor olyan tagfüggvény, amelynek neve megegyezik az osztályéval, és nem rendelkezik típussal.&lt;/p&gt;

&lt;p&gt;Az objektumok által felhasznált memória mindaddig lefoglalt marad, míg fel nem szabadítjuk. Erre a célra a C++ biztosít számunkra egy speciális tagfüggvényt, a &lt;strong&gt;destruktor&lt;/strong&gt;t. Hasonlóan a konstruktorhoz, a destruktornak sincs visszatérési értéke. A destruktornak nem lehetnek paraméterei. A destruktor nevét az osztály nevéből és a hullám karakterből (~) képezzük.&lt;/p&gt;

&lt;center&gt;&lt;em&gt;A 3. JavaScript példa: Objektum literál, tulajdonságok és metódusok.&lt;/em&gt;&lt;/center&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;square&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;A megadott szám négyzete: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;print_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;x: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;, y: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;print_2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;x: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;, y: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;print_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; x: 5, y: 15&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;center&gt;&lt;em&gt;A 4. JavaScript példa: Függvény szintaxis, konstruktor és osztály.&lt;/em&gt;&lt;/center&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;square&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;A megadott szám négyzete: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* Ez egy pont osztály konstruktora. */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;x: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;y: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* A prototípus objektumhoz hozzáadunk egy függvényt.
 * A pont osztályuk a prototípustól öröki ezt a függvényt.
 */&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* Az osztály példányosítása: egy változóban
 * eltároljuk az objektumot.
 */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;center&gt;&lt;em&gt;Az 5. JavaScript példa: Az objektumok (beleértve a tömböket és a függvényeket) mutálódnak!&lt;/em&gt;&lt;/center&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;nev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Jancsi&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;center&gt;&lt;em&gt;A 6. JavaScript példa: Tömbök, tömbszerű pbjektumok és az objektum tulajdonságok elérése.&lt;/em&gt;&lt;/center&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// A tömbök.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ures_tomb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tomb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* Elemek hozzáadása a tömb végére. */&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;tomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1552&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* Az utolsó elem törlése. */&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;tomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* A tömb elemeinek kiíratása. */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;A tömb &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;. eleme: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* Ezzel a 4. index utáni elemeket törlöm. */&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;tomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* Ugyanaz, mint az előző, csak for in ciklussal. */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/* Számmá kellett konvertálni. */&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;A tömb &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;. eleme: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* Tömbszerű objektumok. */&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* Üres objektum. */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* A tömböknek van hossz tulajdonsága. Itt is létrehozzuk. */&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;osszeg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;osszeg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;osszeg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* Az objektum tulajdonságok elérése történhet a
 * .tulajdonsag és a [&quot;tulajdonsag&quot;] szintaxissal is.
 */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;cm&quot;&gt;/* a 4. példában szereplő objektum. */&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;x&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; 125&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;center&gt;&lt;em&gt;Az 5. JavaScript példa: Funkcionális programozás és a JSON (JavaScript Object Notation).&lt;/em&gt;&lt;/center&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tomb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Az összeg: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]();&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;race&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Tom&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;szürke&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;eger&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

 &lt;span class=&quot;nx&quot;&gt;eger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Jerry&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Hiba&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;eger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sárga&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Fri, 01 Sep 2017 02:31:52 +0200</pubDate>
        <link>http://localhost:4000//2017/09/01/gee3.html</link>
        <guid isPermaLink="true">http://localhost:4000//2017/09/01/gee3.html</guid>
      </item>
    
      <item>
        <title>Rövid elméleti bevezető a JavaScript nyelvbe</title>
        <description>&lt;p&gt;A Google Earth Engine (GEE) felhő alapú platform általános bemutatása után (&lt;a href=&quot;&quot;&gt;itt elérhető az 1. rész&lt;/a&gt;), ebben a részben egy rövid betekintést nyújtok az objektum-orientált programozásba és felhívom a figyelmet a JavaScript nyelv fontos jellemzőire, hogy hatékonyan ki tudjátok aknázni a GEE-ben rejlő lehetőségeket akár több száz GB-nyi adat gyors feldolgozására, minimális erőfeszítéssel.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Előzetes programozói tapasztalat erősen javallott&lt;/strong&gt;, különben nem sokat értetek meg az egészből. Teljesen mindegy, hogy milyen nyelvet ismersz. A programozói gondolkodás az, ami valóban számít. Az alapelvek, a vezérlési szerkezetek, az algoritmusok stb. mind ugyanazok, csak a szintaxis és a szabvány más.
Én a C nyelven keresztül tanultam meg a programozást, majd megismerkedtem a C++-szal és az objektum-orientált paradigmával. És csak ezt követően jött a &lt;a href=&quot;https://www.javascript.com/&quot;&gt;JavaScript&lt;/a&gt; (JS).&lt;/p&gt;

&lt;p&gt;A bejegyzésemben megadott kódrészleteket pedig próbáljátok ki! 
Használhatjátok valamelyik böngésző konzolját (Google Chrome esetén: &lt;code class=&quot;highlighter-rouge&quot;&gt;F12&lt;/code&gt;, Firefox esetén &lt;code class=&quot;highlighter-rouge&quot;&gt;CTRL+SHIFT+i&lt;/code&gt;) vagy a GEE kódszerkesztőjét (ebben “strict mode”-ban használhatjátok a JS-t)!&lt;/p&gt;

&lt;p&gt;A programrészleteket egyben letölthetitek &lt;a href=&quot;https://github.com/SalsaBoy990/EarthEngine/blob/master/tutorial2.js&quot;&gt;innen&lt;/a&gt;.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bevezetés-az-objektum-orientált-programozásba&quot;&gt;Bevezetés az objektum-orientált programozásba&lt;/h2&gt;

&lt;p&gt;Ez bevezető csak egy nagyon kurta betekintést nyújt az objektum orientált szemléletbe.&lt;/p&gt;

&lt;p&gt;A programozás célja mindig egy összetett probléma megoldása a számítógép számítási kapacitásának a lehető leghatékonyabb kihasználásával. A programozás során ezt &lt;strong&gt;az összetett problémát fel kell bontanunk kisebb részproblémákra/részlépésekre&lt;/strong&gt; (például az adatok bekérése, a bemenet ellenőrzése, különböző műveletek, amelyeket az adatokon végzünk, adatok mentése stb.), amelyek megoldására külön függvényeket írunk. Ezáltal átláthatóvá válik számunkra a program.&lt;/p&gt;

&lt;p&gt;A “hagyományos” nyelvekben (mint például a C-ben) megtanultuk, hogy &lt;strong&gt;a változókat és a függvényeket külön kezeljük&lt;/strong&gt;, valamint a függvényeket a változók argumentumként való átadásával hívjuk meg. (Az argumentum az az érték, amit bemenő paraméterként megadunk egy függvénynek.). Lehet érték szerint, mutató szerint és referencia szerint paramétert átadni. A JavaScript-ben &lt;strong&gt;kizárólag érték szerinti paraméterátadás&lt;/strong&gt; létezik (az objektum referenciák is érték szerint adódnak át)!&lt;/p&gt;

&lt;p&gt;Az objektum orientált nyelveknek három alapelve van:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;egységbezárás&lt;/strong&gt; / enkapszuláció (encapsulation)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;öröklés&lt;/strong&gt; (inheritance)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;többalakúság&lt;/strong&gt; / polimorfizmus (polymorphism)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Bár a klasszikus öröklés (és a polimorfizmus) JavaScript-ben is imitálható, de valójában kizárólag csak &lt;strong&gt;prototípusos öröklés&lt;/strong&gt; létezik a JS-ben. Öröklés helyett &lt;strong&gt;kompozíció&lt;/strong&gt;t is alkalmazhatunk. A prototípusos öröklésről majd máskor írok.&lt;/p&gt;

&lt;p&gt;Csak az &lt;strong&gt;egységbe foglalás&lt;/strong&gt;ba megyünk bele: &lt;strong&gt;az objektum-orientált paradigma lényege, hogy együtt kezeljük a változókat és a rájuk meghívandó függvényeket egy osztályban&lt;/strong&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt;). Meglepően hangzik, de a JS-ben nincsenek tényleges osztályok, bár úgy programozunk, mintha lennének. Helyesebb inkább objektumokról beszélni (a függvények és a tömbök is objektumok).&lt;/p&gt;

&lt;p&gt;A C++-ban a hozzáférési szintek (&lt;strong&gt;public&lt;/strong&gt;, &lt;strong&gt;protected&lt;/strong&gt; és &lt;strong&gt;private&lt;/strong&gt;) segítségével szabályozhatjuk a tagváltozók és tagfüggvények külső hozzáférését. A C++-ban az osztályok esetén alapértelmezetten privát a hozzáférés, és csak az általunk írt publikus hozzáférésű metódusokon keresztül férhetünk hozzájuk. Ez a biztonságot szolgálja. A JavaScript-ben &lt;strong&gt;minden tagváltozó és metódus kívülről hozzáférhető&lt;/strong&gt; és módosítható. A &lt;strong&gt;bezárás&lt;/strong&gt; (&lt;strong&gt;closure&lt;/strong&gt;) alkalmazásával tehetjük priváttá (tehát kívülről nem hozzáférhetővé) az objektumok tulajdonságait.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;belekóstolás-a-javascript-programozási-nyelvbe&quot;&gt;Belekóstolás a JavaScript programozási nyelvbe&lt;/h2&gt;

&lt;p&gt;Ez a nagyon rövid bemutatás csak felületesen érinti a JS néhány jellemzőjét.&lt;/p&gt;

&lt;p&gt;A JavaScript (a későbbiekben: JS), a web nyelve, ECMAScript néven lett szabványosítva. A nevével ellentétben nincs köze a Java-hoz, és nem egyszerű szkriptnyelv, hanem sokkal több annál: egy dinamikus, objektum-orientált általános célú programozási nyelv.&lt;/p&gt;

&lt;p&gt;A JavaScript &lt;strong&gt;interpretáló nyelv&lt;/strong&gt;, tehát a &lt;strong&gt;fordítás futási időben történik&lt;/strong&gt;: a JS értelmező sorról-sorra halad végig az utasításokon, értelmezi és végrehajtja azokat. Nincsen main() függvény. Ilyen egyszerű. Míg a C esetén először lefordítjuk a forrásfájlt, bináris, futtatható állományt készítve belőle (.exe Windows esetén), majd utána lefuttatunk.&lt;/p&gt;

&lt;p&gt;A legújabb szabvány az &lt;strong&gt;ECMAScript 2017&lt;/strong&gt; (ES8), tavaly az ES7, két éve az ES6 jelent meg. A &lt;strong&gt;webböngészők&lt;/strong&gt; az &lt;strong&gt;ECMAScript5&lt;/strong&gt;-nél újabb szabványokat még nem nagyon implementálták, éppen ezért kocázatos az újabb szabványok szerint kliens oldali kódot írni a webböngészők számára. Minden webböngésző tartalmaz &lt;strong&gt;JavaScript fordító&lt;/strong&gt;t (fordítómotornak is szokták hívni). A &lt;strong&gt;Node.js&lt;/strong&gt; szerver oldali JS keretrendszer például a Google Chrome V8 fordítómotorját használja. Később tervezek foglalkozni ezzel a framework-kkel is.&lt;/p&gt;

&lt;p&gt;A szerver oldalon viszont lehet ES6 szabvány szerint programozni. Például az egyszerűsített függvényszintaxis is használható: &lt;code class=&quot;highlighter-rouge&quot;&gt;(args) =&amp;gt; { /* utasítások */ }&lt;/code&gt; a &lt;code class=&quot;highlighter-rouge&quot;&gt;function (args) { /* utasítások */ }&lt;/code&gt; helyett. Ez az úgynevezett &lt;strong&gt;callback függvényeknél&lt;/strong&gt; hasznos, amelyeknek ugyanis nem kell nevet adni.&lt;/p&gt;

&lt;p&gt;A JS-ben &lt;strong&gt;nincsen &lt;code class=&quot;highlighter-rouge&quot;&gt;main()&lt;/code&gt; függvény&lt;/strong&gt;, bár lehet ilyen néven függvényt létrehozni. A változók típusa változhat, ugyanis a JS gyengén típusos nyelv. Azonban a típusos nyelveknél, mint például a C vagy a C++, mindig meg kell adni a változók típusát:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;char&lt;/code&gt; (karakter, ASCII)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt; (egész szám)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;float&lt;/code&gt; (lebegőpontos, vagyis törtszám)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;double&lt;/code&gt; (kétszeres pontosságú lebegőpontos szám)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt; (sztring, szöveg típusú).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bool&lt;/code&gt; (logikai: &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A JS-ben a &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt;&lt;/strong&gt; kulcsszóval hozhatunk létre változókat, amelyekhez értéket, objektumot és függvényt is rendelhetünk. Az objektum tulajdonságainál alapértelmezett a &lt;strong&gt;public&lt;/strong&gt; hozzáférés, vagyis kívülről elérhetők és módosíthatók, de ez a viselkedés megváltoztatható. Private hozzáférés is lehetséges a JS-ben a &lt;strong&gt;bezárás&lt;/strong&gt;nak, angulul &lt;strong&gt;closure&lt;/strong&gt;-nek nevezett eljárással.&lt;/p&gt;

&lt;p&gt;Az ES6-ban már lehet használni a &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; helyett a &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt;&lt;/strong&gt;-et, aminek már &lt;strong&gt;blokkhatóköre van&lt;/strong&gt;, így egy csomó nem várt “mellékhatástól” megkímél bennünket. Például magának a &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt;-nek az értéke a kontextustól függ, azonban nem kötődik &lt;strong&gt;függvényhatókör&lt;/strong&gt;höz! A függvényhatókörről és a &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt;-ről a következő részben lesz szó.&lt;/p&gt;

&lt;p&gt;A JS-ben az aposztróf &lt;code class=&quot;highlighter-rouge&quot;&gt;'&lt;/code&gt; és az idézőjel &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&lt;/code&gt; egyenértékű és a sztringek jelölésére használatos. De keverni ne keverjük őket! A &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;dupla idézőjeleket&quot;&lt;/code&gt; használjuk inkább. &lt;strong&gt;Unicode karakterkészletet használ&lt;/strong&gt; a JS, így majnem minden írott nyelvet támogat (az Unicode tábla maximum 1 millió 114 ezer 112 különféle betűt és jelet képes maximum eltárolni, jelenleg több mint 136 ezer karaktert tartalmaz). Ez hatalmas előny. A változónevekben és a függvény nevekben lehet ékezetes karakter is, de ez nem ajánlott programozói gyakorlat. Sőt lehetséges &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt; nevű függvény/változó is: gondoljunk itt a &lt;strong&gt;jQuery&lt;/strong&gt; keretrendszerre, ahol van egy &lt;code class=&quot;highlighter-rouge&quot;&gt;$()&lt;/code&gt; nevű függvény. Az ékezetes karakterekkel nincsen probléma a JavaScript-ben, mert nem ASCII karaktertáblát használunk.&lt;/p&gt;

&lt;p&gt;A JS-ben &lt;strong&gt;automatikus szemétgyűjtés&lt;/strong&gt; van (automatic garbage collection), tehát nem kell felszabadítanunk a lefoglalt tárhelyet (a C/C++ esetén csak a &lt;strong&gt;dinamikus memóriakezelés&lt;/strong&gt; esetén kell explicit, azaz magunknak elvégezni a lefoglalt memóraterület felszabadítását), hanem a fordító automatikusan elvégzi: ha egy objektum már nem elérhető – amikor a program már nem tud hivatkozni rá – a fordító automatikusan felszabadítja a lefoglalt memóriaterületet. Éppen ezért &lt;strong&gt;nincsen destruktor&lt;/strong&gt; függvény a JS-ben. &lt;strong&gt;Mutatók sincsenek&lt;/strong&gt;, tehát nem férhetünk hozzá a memóriacímekhez. Helyette &lt;strong&gt;referenciák vannak&lt;/strong&gt;, amiről a JS gondoskodik nekünk.&lt;/p&gt;

&lt;center&gt;&lt;em&gt;Az 1. JavaScript programod: Változók és függvények.&lt;/em&gt;&lt;/center&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;valtozo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;valtozo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Helló&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;, világ!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;valtozo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; Helló, világ!&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prompt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Add meg a keresztneved!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Szia &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A JavaScript-ben a &lt;strong&gt;primitív adattípusok&lt;/strong&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt;, logikai, szám és sztring) &lt;strong&gt;nem mutálódnak&lt;/strong&gt; (immutable), azaz létrehozásuk után az értékük már nem megváltoztatható! Ezek a nyelv legalacsonyabb szintű elemei.&lt;/p&gt;

&lt;p&gt;Hiába hívjuk meg a &lt;code class=&quot;highlighter-rouge&quot;&gt;toUpperCase()&lt;/code&gt; globális metódust (nagybetűssé alakítja a szöveget) a &lt;code class=&quot;highlighter-rouge&quot;&gt;nev&lt;/code&gt; változóra, a &lt;code class=&quot;highlighter-rouge&quot;&gt;nev&lt;/code&gt; változó értékét nem változtatja meg. Ha primitívekre hívunk meg függvényeket, illetve paraméterként átadjuk azokat függvénynek, akkor lokális másolat készül róluk (lefoglalódik számukra új memóriaterület) és a módosítások azokon hajtódnak végre. Az eredeti változó értéke változatlan marad:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Juliska&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; JULISKA&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; Juliska&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;nev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; JULISKA&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Az eredeti változó értéke nem változott! Egyetlen sztring metódus sem képes megváltoztatni azt, hanem egy új sztring értéket adnak vissza (“JULISKA”). Viszont új értéket adhatunk a &lt;code class=&quot;highlighter-rouge&quot;&gt;nev&lt;/code&gt; változónak. A megváltoztathatatlanság nem az értékadásra vonatkozik.&lt;/p&gt;

&lt;p&gt;A primitíveket érték szerint hasonlítjuk össze: &lt;strong&gt;két primitív azonos, ha értékük megegyezik&lt;/strong&gt; (két sztring egyenlő, ha hosszuk és minden egyes karakterük megegyezik):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;róka&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;róka&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Az &lt;strong&gt;objektumok (beleértve a tömböket és a függvényeket)&lt;/strong&gt; másként viselkednek, mint a primitív típusok, ugyanis ezek &lt;strong&gt;mutálódónak&lt;/strong&gt; (mutable), &lt;strong&gt;értékük megváltoztatható&lt;/strong&gt;. A primitív típusoknál:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Az a változó értékét egy új változóba másoljuk.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Új értéket adunk az eredeti változónak.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3.14-et ír ki, b nem változott meg.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;De mi a helyzet az objektumoknál, amelyeket &lt;strong&gt;referencia típus&lt;/strong&gt;oknak is nevezünk:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Egy 3 elemű tömb létrehozása.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// A 'b' tömb ugyanarra a tömbre hivatkozik.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Módosítsuk az eredeti tömböt!&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// A 'b' elemei is változnak: [99, 2, 3].&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; true&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 'a' és 'b' ugyanarra a tömbre hivatkozik.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Amikor a &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;-hez rendeljük az &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; tömböt, akkor nem egy új másolat jön létre az &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; tömb objektumról, hanem csupán egy referencia, pontosabban a &lt;strong&gt;referencia egy másolata&lt;/strong&gt;, adódik át, ami az &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; tömb címére mutat. Tehát a &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt; ugyanarra a tömbre egy második referencia. Tulajdonképpen &lt;strong&gt;sekély másolás&lt;/strong&gt; történik. Mély másolat készítéséhez explicite másolnunk kell az erdeti tömb összes elemét egy újabb memóraterületre (új tömböt hozunk létre):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; false: különböző tömbök sosem egyenlők.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Az objektumokat &lt;strong&gt;referencia szerint&lt;/strong&gt; különböztetjük meg egymástól: &lt;strong&gt;két objektum akkor sem egyenlő, ha ugyanazokkal a tulajdonságokkal és értékekkel rendelkeznek&lt;/strong&gt;. Két tömb sem egyenlő, mégha megegyezik az összes elemük, és azok sorrendje is. &lt;strong&gt;Csak akkor azonos&lt;/strong&gt; két objektum érték, &lt;strong&gt;ha ugyanarra az objektumra hivatkoznak&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Referencia szerinti értékadás van az objektumok esetén, vagyis nem új másolatokat (magát az objektumot), hanem referenciákat adunk értékül ugyanarról az objektumról. A függvényeknek nem maguk az objektumok adódnak át, hanem csupán a rájuk mutató referenciák másolatai, amin keresztül a függvény hozzáférhet az objektumok megváltoztatható értékeihez. A primitív típusok értékei a &lt;strong&gt;verem&lt;/strong&gt;be (&lt;strong&gt;call stack&lt;/strong&gt;) kerülnek. Ha meghívunk egy függvényt egy primitív változóra, akkor egy lokális másolat készül róla, ami a függvény visszatérése után felszabadul. Az eredeti érték nem változik.&lt;/p&gt;

&lt;p&gt;Az objektumokat a &lt;strong&gt;heap&lt;/strong&gt;-ben (a &lt;strong&gt;dinamikusan lefoglalt&lt;/strong&gt; adatok tárterülete a memóriában) tároljuk el. Például tekintsük a &lt;code class=&quot;highlighter-rouge&quot;&gt;var o = { x:0 };&lt;/code&gt; kifejezést! Mi történik a futáskor? A heap-ben megfelelő méretű tárhely foglalódik le az objektum &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;x:0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; tárolására, majd az értékek inicializálódnak. A kifejezés értéke az objektumra mutató hivatkozás lesz &lt;code class=&quot;highlighter-rouge&quot;&gt;o&lt;/code&gt;-n keresztül. Az &lt;code class=&quot;highlighter-rouge&quot;&gt;o&lt;/code&gt; tehát nem magát az objektumot, csak egy referenciát tárol.&lt;/p&gt;

&lt;center&gt;&lt;em&gt;A 2. JavaScript példa: Az objektumok mutálódnak, míg a primitívek nem.&lt;/em&gt;&lt;/center&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Alma&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;nev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Alma&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Objektum-e az arg.&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Körte&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Körte&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; &quot;Alma&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; &quot;{ nev: &quot;Körte&quot; }&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Összefoglalva tehát, &lt;strong&gt;a Javascript-ben kizárólag érték szerinti paraméterátadás van!&lt;/strong&gt; Az objektumoknál a &lt;strong&gt;referenciák másolatai&lt;/strong&gt; érték szerint adódnak át a függvényeknek (az objektum értékei mutálódnak), míg a primitív típusoknál &lt;strong&gt;lokális másolat&lt;/strong&gt; készül a változók értékeiről (az eredeti értékek nem mutálódnak).&lt;/p&gt;

&lt;p&gt;A JS-ben számos implicit (rejtett) típuskonverzió van. A változók típusa változhat a program futása során, amit az implicit típuskonverziók tesznek lehetővé.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;szam&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;szoveg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; kiskutya&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* A + operátor az n számot sztringgé konvertálja
 * és összefűzi s-sel.
 */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;eredmeny&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;szam&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;szoveg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eredmeny&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; 101 kiskutya&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* A '-' operátor a sztringet számmá konvertálja/castolja
 * (ha tudja, különben undefined lesz) és kivonja belőle a 10-et.
 */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;62&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; 52&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// De explicite mi is végezhetünk típuskonverziót.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1500&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Számmá castoljuk a sztringet.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; 1552&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Amikor az egyenlőség és az egyenlőtlenség operátorokat használjuk, akkor életbevágóan fontos tisztában lenni az implicit típuskonverziókkal. Létezik az egyenlőség operátor (&lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;) és a szigorú egyenlőség operátor (&lt;code class=&quot;highlighter-rouge&quot;&gt;===&lt;/code&gt;). Az utóbbi az azonosság szigorú definícióját használja és határozza meg a két operanduszának az azonosságát. A nemegyenlőség operátor sokkal megengedőbb, hiszen engedélyezi a típuskonverziókat. A nemegyenlőség operátorból szintén kettő van: &lt;code class=&quot;highlighter-rouge&quot;&gt;!=&lt;/code&gt; és &lt;code class=&quot;highlighter-rouge&quot;&gt;!==&lt;/code&gt;. Egy rövid kódrészleten bemutatva ez világosabb lesz:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;60&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; true, a &quot;60&quot;-ból szám lesz&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;60&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; false; szám és sztring különbözik&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; false; szám !== logikai érték&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;NaN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;NaN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; false&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;NaN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;NaN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; false&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* Ezzel a függvénnyel meghatározható, hogy
 * NaN-e a vizsgált érték. */&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;isNaN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;NaN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A NaN érték (not-a-number) a “nem szám” jelölésére való. Akkor kapjuk értékül például, ha számot osztunk sztringgel: &lt;code class=&quot;highlighter-rouge&quot;&gt;10/&quot;a&quot;&lt;/code&gt;. Ez nyilvánvalóan értelmetlen eredményre vezet. A NaN semmilyen másik értékkel, de még önmagával sem azonos!&lt;/p&gt;

&lt;p&gt;A JS-ben az összes számot &lt;strong&gt;64-bites lebegőpontos formátum&lt;/strong&gt;ban reprezentálja az &lt;strong&gt;IEEE 754 szabvány&lt;/strong&gt; szerint. Ez azt jelenti, hogy maximum az olyan nagy számot képes eltárolni, mint a &lt;code class=&quot;highlighter-rouge&quot;&gt;±1.7976931348623157 x 10^308&lt;/code&gt;, és olyan kicsit, mint &lt;code class=&quot;highlighter-rouge&quot;&gt;5 x 10^-324&lt;/code&gt; (
&lt;strong&gt;alulcsordulás&lt;/strong&gt; történik amikor olyan kicsi a szám, hogy a számítógép nem tudja megkülönböztetni a 0-tól).
A JavaScript számformátuma pontosan reprezentálja az egész számokat &lt;code class=&quot;highlighter-rouge&quot;&gt;-9007199254740992&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;-2^53&lt;/code&gt;) és &lt;code class=&quot;highlighter-rouge&quot;&gt;9007199254740992&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;2^53&lt;/code&gt;) között. Bizonyos operátorok viszont (mint például a tömbök indexelése vagy a bitenkénti műveletek) 32-bites egész számokkal működnek.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;hexadecimális számok is támogatottak&lt;/strong&gt; az ECMAScript szabványban, viszont az oktális számok nem!&lt;/p&gt;

&lt;p&gt;Legyél tisztában azzal is, hogy &lt;strong&gt;a lebegőpontos értékek bizonyos esetekben nem pontosak&lt;/strong&gt;, így ne lepődjetek meg, ha ezt tapasztaljátok:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; 0.30000000000000004&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//=&amp;gt; false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Szerintem ennyi érdekesség elég.&lt;/p&gt;

&lt;p&gt;Egy részbe elég ennyi, majd a folytatom ezt az oktató sorozatot. A következő részekben ezekről tervezek írni:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;a függvényhatókör és blokkhatókör&lt;/li&gt;
  &lt;li&gt;a bezárás (closure)&lt;/li&gt;
  &lt;li&gt;a tömbök és a tömbszerű objektumok&lt;/li&gt;
  &lt;li&gt;hozzáférés az objektum tulajdonságaihoz&lt;/li&gt;
  &lt;li&gt;a &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; érték&lt;/li&gt;
  &lt;li&gt;objektumok és függvények létrehozása&lt;/li&gt;
  &lt;li&gt;a prototípusos öröklés&lt;/li&gt;
  &lt;li&gt;a JSON (JavaScript Object Notation)&lt;/li&gt;
  &lt;li&gt;a RegExp objektumok&lt;/li&gt;
  &lt;li&gt;a funkcionális programozás (&lt;code class=&quot;highlighter-rouge&quot;&gt;map()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;reduce()&lt;/code&gt; és &lt;code class=&quot;highlighter-rouge&quot;&gt;filter()&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;a “use strict” pragma&lt;/li&gt;
  &lt;li&gt;a globális objektum (Window)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ez a cikksorozat csak bevezető jellegű. Ez alapján elindulhattok a JavaScript mélyebb megismeréséhez vezető úton.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;erősen-ajánlott-irodalom&quot;&gt;Erősen ajánlott irodalom&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;David Flanagan (2011). &lt;a href=&quot;http://shop.oreilly.com/product/9780596805531.do&quot;&gt;JavaScript: The Definitive Guide. 6th Edition.&lt;/a&gt; O’Reilly, USA.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 01 Sep 2017 02:31:52 +0200</pubDate>
        <link>http://localhost:4000//tudomany/2017/09/01/gee2.html</link>
        <guid isPermaLink="true">http://localhost:4000//tudomany/2017/09/01/gee2.html</guid>
      </item>
    
      <item>
        <title>Rövid elméleti bevezető a JavaScript nyelvbe</title>
        <description>&lt;p&gt;A Google Earth Engine (GEE) felhő alapú platform általános bemutatása után (&lt;a href=&quot;http://www.newgeographer.com/tudomany/2017/08/07/google_earth_engine_01.html&quot;&gt;itt elérhető az 1. rész&lt;/a&gt;), ebben a részben egy rövid betekintést nyújtok az objektum-orientált programozásba és felhívom a figyelmet a JavaScript nyelv fontos jellemzőire, hogy hatékonyan ki tudjátok aknázni a GEE-ben rejlő lehetőségeket akár több száz GB-nyi adat gyors feldolgozására, minimális erőfeszítéssel.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Előzetes programozói tapasztalat erősen javallott&lt;/strong&gt;, különben nem sokat értetek meg az egészből. Teljesen mindegy, hogy milyen nyelvet ismersz. A programozói gondolkodás az, ami valóban számít. Az alapelvek, a vezérlési szerkezetek, az algoritmusok stb. mind ugyanazok, csak a szintaxis és a szabvány más.
Én a C nyelven keresztül tanultam meg a programozást, majd utána ismerkedtem meg a C++-szal és az objektum-orientált paradigmával. És csak ezt követően jött a &lt;a href=&quot;https://www.javascript.com/&quot;&gt;JavaScript&lt;/a&gt; (JS).&lt;/p&gt;

&lt;p&gt;A bejegyzésemben megadott kódrészleteket pedig próbáljátok ki! 
Használhatjátok valamelyik böngésző konzolját (Google Chrome esetén: &lt;code class=&quot;highlighter-rouge&quot;&gt;F12&lt;/code&gt;, Firefox esetén &lt;code class=&quot;highlighter-rouge&quot;&gt;CTRL+SHIFT+i&lt;/code&gt;) vagy a GEE kódszerkesztőjét (ebben “strict mode”-ban használhatjátok a JS-t)!&lt;/p&gt;

&lt;p&gt;A programrészleteket egyben letölthetitek &lt;a href=&quot;https://github.com/SalsaBoy990/EarthEngine/blob/master/tutorial2.js&quot;&gt;innen&lt;/a&gt;.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bevezetés-az-objektum-orientált-programozásba&quot;&gt;Bevezetés az objektum-orientált programozásba&lt;/h2&gt;

&lt;p&gt;Ez bevezető csak egy nagyon kurta betekintést nyújt az objektum orientált szemléletbe.&lt;/p&gt;

&lt;p&gt;A programozás célja mindig egy összetett probléma megoldása a számítógép számítási kapacitásának a lehető leghatékonyabb kihasználásával. A programozás során ezt &lt;strong&gt;az összetett problémát fel kell bontanunk kisebb részproblémákra/részlépésekre&lt;/strong&gt; (például az adatok bekérése, a bemenet ellenőrzése, különböző műveletek, amelyeket az adatokon végzünk, adatok mentése stb.), amelyek megoldására külön függvényeket írunk. Ezáltal átláthatóvá válik számunkra a program működése.&lt;/p&gt;

&lt;p&gt;A “hagyományos” nyelvekben (mint például a C-ben) megtanultuk, hogy &lt;strong&gt;a változókat és a függvényeket külön kezeljük&lt;/strong&gt;, valamint a függvényeket a változók argumentumként való átadásával hívjuk meg. (Az argumentum az az érték, amit bemenő paraméterként megadunk egy függvénynek.). Lehet érték szerint, mutató szerint és referencia szerint paramétert átadni. A JavaScript-ben &lt;strong&gt;kizárólag érték szerinti paraméterátadás&lt;/strong&gt; létezik (az objektum referenciák is érték szerint adódnak át)!&lt;/p&gt;

&lt;p&gt;Az objektum orientált nyelveknek három alapelve van:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;egységbezárás&lt;/strong&gt; / enkapszuláció (encapsulation)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;öröklés&lt;/strong&gt; (inheritance)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;többalakúság&lt;/strong&gt; / polimorfizmus (polymorphism)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A klasszikus öröklés (és a polimorfizmus) JavaScript-ben is imitálható, de valójában kizárólag csak &lt;strong&gt;prototípusos öröklés&lt;/strong&gt; létezik a JS-ben. Öröklés helyett &lt;strong&gt;kompozíció&lt;/strong&gt;t is alkalmazhatunk. A prototípusos öröklésről majd máskor írok.&lt;/p&gt;

&lt;p&gt;Csak az &lt;strong&gt;egységbe foglalás&lt;/strong&gt;ba megyünk itt bele: &lt;strong&gt;az objektum-orientált paradigma lényege, hogy együtt kezeljük a változókat és a rájuk meghívandó függvényeket egy osztályban&lt;/strong&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt;). Meglepően hangzik, de a JS-ben nincsenek tényleges osztályok, bár úgy programozunk, mintha lennének. Helyesebb inkább objektumokról beszélni (a függvények és a tömbök is objektumok).&lt;/p&gt;

&lt;p&gt;A C++-ban a hozzáférési szintek (&lt;strong&gt;public&lt;/strong&gt;, &lt;strong&gt;protected&lt;/strong&gt; és &lt;strong&gt;private&lt;/strong&gt;) segítségével szabályozhatjuk a tagváltozók és tagfüggvények külső hozzáférését. A C++-ban az osztályok esetén alapértelmezetten privát a hozzáférés, és csak az általunk írt publikus hozzáférésű metódusokon keresztül férhetünk hozzá a tagváltozókhoz. Ez a biztonságot szolgálja. A JavaScript-ben &lt;strong&gt;minden tagváltozó és metódus kívülről hozzáférhető&lt;/strong&gt; és módosítható. A &lt;strong&gt;bezárás&lt;/strong&gt; (&lt;strong&gt;closure&lt;/strong&gt;) alkalmazásával tehetjük priváttá (tehát kívülről nem hozzáférhetővé) az objektumok tulajdonságait.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;belekóstolás-a-javascript-programozási-nyelvbe&quot;&gt;Belekóstolás a JavaScript programozási nyelvbe&lt;/h2&gt;

&lt;p&gt;Ez a nagyon rövid bemutatás csak felületesen érinti a JS néhány jellemzőjét.&lt;/p&gt;

&lt;p&gt;A JavaScript (a későbbiekben: JS), a web nyelve, ECMAScript néven lett szabványosítva. A nevével ellentétben nincs köze a Java-hoz, és nem egyszerű szkriptnyelv, hanem sokkal több annál: egy dinamikus, objektum-orientált, általános célú programozási nyelv.&lt;/p&gt;

&lt;p&gt;A JavaScript &lt;strong&gt;interpretáló nyelv&lt;/strong&gt;, tehát a &lt;strong&gt;fordítás futási időben történik&lt;/strong&gt;: a JS értelmező sorról-sorra halad végig az utasításokon, értelmezi és végrehajtja azokat. Nincsen main() függvény. Ilyen egyszerű. Míg a C esetén először lefordítjuk a forrásfájlt, bináris, futtatható állományt készítve belőle (.exe Windows esetén), majd utána lefuttatunk.&lt;/p&gt;

&lt;p&gt;A legújabb szabvány az &lt;strong&gt;ECMAScript 2017&lt;/strong&gt; (ES8), tavaly az ES7, két éve az ES6 jelent meg. A &lt;strong&gt;webböngészők&lt;/strong&gt; az &lt;strong&gt;ECMAScript5&lt;/strong&gt;-nél újabb szabványokat még nem nagyon implementálták, éppen ezért kocázatos az újabb szabványok szerint kliens oldali kódot írni a webböngészők számára. Minden webböngésző tartalmaz &lt;strong&gt;JavaScript fordító&lt;/strong&gt;t (fordítómotornak is szokták hívni). A &lt;strong&gt;Node.js&lt;/strong&gt; szerver oldali JS keretrendszer például a Google Chrome V8 fordítómotorját használja. Később tervezek foglalkozni ezzel a framework-kkel is.&lt;/p&gt;

&lt;p&gt;A szerver oldalon viszont lehet ES6 szabvány szerint programozni. Például az egyszerűsített függvényszintaxis is használható: &lt;code class=&quot;highlighter-rouge&quot;&gt;(args) =&amp;gt; { /* utasítások */ }&lt;/code&gt; a &lt;code class=&quot;highlighter-rouge&quot;&gt;function (args) { /* utasítások */ }&lt;/code&gt; helyett. Ez az úgynevezett &lt;strong&gt;callback függvényeknél&lt;/strong&gt; hasznos, amelyeknek ugyanis nem kell nevet adni.&lt;/p&gt;

&lt;p&gt;A JS-ben &lt;strong&gt;nincsen &lt;code class=&quot;highlighter-rouge&quot;&gt;main()&lt;/code&gt; függvény&lt;/strong&gt;, bár lehet ilyen néven függvényt létrehozni. A &lt;strong&gt;változók típusa változhat&lt;/strong&gt;, ugyanis a JS gyengén típusos nyelv. Azonban a típusos nyelveknél, mint például a C vagy a C++, mindig meg kell adni a változók típusát:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;char&lt;/code&gt; (karakter, ASCII)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt; (egész szám)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;float&lt;/code&gt; (lebegőpontos, vagyis törtszám)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;double&lt;/code&gt; (kétszeres pontosságú lebegőpontos szám)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt; (sztring, szöveg típusú).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bool&lt;/code&gt; (logikai: &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A JS-ben a &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt;&lt;/strong&gt; kulcsszóval hozhatunk létre változókat, amelyekhez bármilyen típusú értéket, objektumot és függvényt is rendelhetünk. Az objektum tulajdonságainál alapértelmezett a &lt;strong&gt;public&lt;/strong&gt; hozzáférés, vagyis kívülről elérhetők és módosíthatók, de ez a viselkedés megváltoztatható. Private hozzáférés is lehetséges a JS-ben a &lt;strong&gt;bezárás&lt;/strong&gt;nak, illetve angulul &lt;strong&gt;closure&lt;/strong&gt;-nek nevezett eljárással.&lt;/p&gt;

&lt;p&gt;Az ES6-ban már lehet használni a &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; helyett a &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt;&lt;/strong&gt;-et, aminek már &lt;strong&gt;blokkhatóköre van&lt;/strong&gt;, így egy csomó nem várt “mellékhatástól” megkímél bennünket. Például magának a &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt;-nek az értéke a kontextustól függ, azonban nem kötődik &lt;strong&gt;függvényhatókör&lt;/strong&gt;höz! A függvényhatókörről és a &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt;-ről a következő részben lesz szó.&lt;/p&gt;

&lt;p&gt;A JS-ben az aposztróf &lt;code class=&quot;highlighter-rouge&quot;&gt;'&lt;/code&gt; és az idézőjel &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&lt;/code&gt; egyenértékű és a sztringek jelölésére használatos. De keverni ne keverjük őket! A &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;dupla idézőjeleket&quot;&lt;/code&gt; használjuk inkább. &lt;strong&gt;Unicode karakterkészletet használ&lt;/strong&gt; a JS, így majnem minden írott nyelvet támogat (az Unicode tábla maximum 1 millió 114 ezer 112 különféle betűt és jelet képes maximum eltárolni, jelenleg több mint 136 ezer karaktert tartalmaz). Ez hatalmas előny. A változónevekben és a függvény nevekben lehet ékezetes karakter is, de ez nem ajánlott programozói gyakorlat. Sőt lehetséges &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt; nevű függvény/változó is: gondoljunk itt a &lt;strong&gt;jQuery&lt;/strong&gt; keretrendszerre, ahol van egy &lt;code class=&quot;highlighter-rouge&quot;&gt;$()&lt;/code&gt; nevű függvény. Az ékezetes karakterekkel nincsen probléma a JavaScript-ben, mert nem a szörnyű ASCII karaktertáblát használjunk.&lt;/p&gt;

&lt;p&gt;A JS-ben &lt;strong&gt;automatikus szemétgyűjtés&lt;/strong&gt; van (automatic garbage collection), tehát nem kell felszabadítanunk a lefoglalt tárhelyet (a C/C++ esetén csak a &lt;strong&gt;dinamikus memóriakezelés&lt;/strong&gt; esetén kell explicit, azaz magunknak elvégezni a lefoglalt memóraterület felszabadítását), hanem a fordító automatikusan elvégzi: ha egy objektum már nem elérhető – amikor a program már nem tud hivatkozni rá – a fordító automatikusan felszabadítja a lefoglalt memóriaterületet. Éppen ezért &lt;strong&gt;nincsen destruktor&lt;/strong&gt; függvény a JS-ben. &lt;strong&gt;Mutatók sincsenek&lt;/strong&gt;, tehát nem férhetünk hozzá a memóriacímekhez. Helyette &lt;strong&gt;referenciák vannak&lt;/strong&gt;, amiről a JS gondoskodik nekünk.&lt;/p&gt;

&lt;figcaption class=&quot;code-caption&quot;&gt;Az 1. JavaScript programod: Változók és függvények.&lt;/figcaption&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var valtozo = 10;
valtozo = &quot;Helló&quot;;
var f = function (s) {
    console.log(s + &quot;, világ!&quot;);
};
f(valtozo); //=&amp;gt; Helló, világ!
var nev = prompt(&quot;Add meg a keresztneved!&quot;);
console.log(&quot;Szia &quot; + nev + &quot;!&quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A JavaScript-ben a &lt;strong&gt;primitív adattípusok&lt;/strong&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt;, logikai, szám és sztring) &lt;strong&gt;nem mutálódnak&lt;/strong&gt; (immutable), azaz létrehozásuk után az értékük már nem megváltoztatható! Ezek a nyelv legalacsonyabb szintű elemei.&lt;/p&gt;

&lt;p&gt;Hiába hívjuk meg a &lt;code class=&quot;highlighter-rouge&quot;&gt;toUpperCase()&lt;/code&gt; globális metódust (nagybetűssé alakítja a szöveget) a &lt;code class=&quot;highlighter-rouge&quot;&gt;nev&lt;/code&gt; változóra, a &lt;code class=&quot;highlighter-rouge&quot;&gt;nev&lt;/code&gt; változó értékét nem változtatja meg. Ha primitívekre hívunk meg függvényeket, illetve paraméterként átadjuk azokat függvénynek, akkor lokális másolat készül róluk (lefoglalódik számukra új memóriaterület) és a módosítások azokon hajtódnak végre. Az eredeti változó értéke változatlan marad:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var nev = &quot;Juliska&quot;;
console.log(nev.toUpperCase()); //=&amp;gt; JULISKA
console.log(nev); //=&amp;gt; Juliska
nev = nev.toUpperCase();
console.log(nev); //=&amp;gt; JULISKA
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Az eredeti változó értéke nem változott! Egyetlen sztring metódus sem képes megváltoztatni azt, hanem egy új sztring értéket adnak vissza (“JULISKA”). Viszont új értéket adhatunk a &lt;code class=&quot;highlighter-rouge&quot;&gt;nev&lt;/code&gt; változónak. A megváltoztathatatlanság nem az értékadásra vonatkozik.&lt;/p&gt;

&lt;p&gt;A primitíveket érték szerint hasonlítjuk össze: &lt;strong&gt;két primitív azonos, ha értékük megegyezik&lt;/strong&gt; (két sztring egyenlő, ha hosszuk és minden egyes karakterük megegyezik):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(101 === 101); //=&amp;gt; true
console.log(false === false); //=&amp;gt; true
console.log(&quot;róka&quot; === &quot;róka&quot;); //=&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Az &lt;strong&gt;objektumok (beleértve a tömböket és a függvényeket)&lt;/strong&gt; másként viselkednek, mint a primitív típusok, ugyanis ezek &lt;strong&gt;mutálódnak&lt;/strong&gt; (mutable), azaz &lt;strong&gt;értékük megváltoztatható&lt;/strong&gt;. A primitív típusoknál:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a = 3.14;
var b = a; // Az a változó értékét egy új változóba másoljuk.
a = 4; // Új értéket adunk az eredeti változónak.
alert(b) // 3.14-et ír ki, b nem változott meg.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;De mi a helyzet az objektumoknál, amelyeket &lt;strong&gt;referencia típus&lt;/strong&gt;oknak is nevezünk:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a = [1, 2, 3]; // Egy 3 elemű tömb létrehozása.
var b = a; // A 'b' tömb ugyanarra a tömbre hivatkozik.
a[0] = 99; // Módosítsuk az eredeti tömböt!
alert(b); // A 'b' elemei is változnak: [99, 2, 3].
console.log(a === b); //=&amp;gt; true
// 'a' és 'b' ugyanarra a tömbre hivatkozik.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Amikor a &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;-hez rendeljük az &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; tömböt, akkor nem egy új másolat jön létre az &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; tömb objektumról, hanem csupán egy referencia, pontosabban a &lt;strong&gt;referencia egy másolata&lt;/strong&gt;, adódik át, ami az &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; tömb címére mutat. Tehát a &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt; ugyanarra a tömbre egy második referencia. Tulajdonképpen &lt;strong&gt;sekély másolás&lt;/strong&gt; történik. Mély másolat készítéséhez explicite kell másolnunk az erdeti tömb összes elemét egy újabb memóraterületre (új tömböt hozunk létre):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var a = [1, 2, 3];
var b = [];
for(var i = 0; i &amp;lt; a.length; i++) {
    b[i] = a[i];
}
console.log(a === b); //=&amp;gt; false: különböző tömbök sosem egyenlők.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Az objektumokat &lt;strong&gt;referencia szerint&lt;/strong&gt; különböztetjük meg egymástól: &lt;strong&gt;két objektum akkor sem egyenlő, ha ugyanazokkal a tulajdonságokkal és értékekkel rendelkeznek&lt;/strong&gt;. Két tömb sem egyenlő, mégha megegyezik az összes elemük, és azok sorrendje is. &lt;strong&gt;Csak akkor azonos&lt;/strong&gt; két objektum érték, &lt;strong&gt;ha ugyanarra az objektumra hivatkoznak&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Referencia szerinti értékadás van az objektumok esetén, vagyis nem új másolatokat (magát az objektumot), hanem referenciákat adunk értékül ugyanarról az objektumról. A függvényeknek nem maguk az objektumok adódnak át, hanem csupán a rájuk mutató referenciák másolatai, amin keresztül a függvény hozzáférhet az objektumok megváltoztatható értékeihez. A primitív típusok értékei a &lt;strong&gt;verem&lt;/strong&gt;be (&lt;strong&gt;call stack&lt;/strong&gt;) kerülnek. Ha meghívunk egy függvényt egy primitív változóra, akkor egy lokális másolat készül róla, ami a függvény visszatérése után felszabadul. Az eredeti érték nem változik.&lt;/p&gt;

&lt;p&gt;Az objektumokat a &lt;strong&gt;heap&lt;/strong&gt;-ben (a &lt;strong&gt;dinamikusan lefoglalt&lt;/strong&gt; adatok tárterülete a memóriában) tároljuk el. Például tekintsük a &lt;code class=&quot;highlighter-rouge&quot;&gt;var o = { x:0 };&lt;/code&gt; kifejezést! Mi történik a futáskor? A heap-ben megfelelő méretű tárhely foglalódik le az objektum &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;x:0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; tárolására, majd az értékek inicializálódnak. A kifejezés értéke az objektumra mutató hivatkozás lesz &lt;code class=&quot;highlighter-rouge&quot;&gt;o&lt;/code&gt;-n keresztül. Az &lt;code class=&quot;highlighter-rouge&quot;&gt;o&lt;/code&gt; tehát nem magát az objektumot, csak egy referenciát tárol.&lt;/p&gt;

&lt;figcaption class=&quot;code-caption&quot;&gt;A 2. JavaScript példa: Az objektumok mutálódnak, míg a primitívek nem.&lt;/figcaption&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var s = &quot;Alma&quot;;
var o = { nev: &quot;Alma&quot; };

var foo = function (arg) {
    if(arg instanceof Object) { // Objektum-e az arg.
        arg.nev = &quot;Körte&quot;;
    } else {
        arg = &quot;Körte&quot;;
    }
};
foo(s);
foo(o);
console.log(s); //=&amp;gt; &quot;Alma&quot;
console.log(o); //=&amp;gt; &quot;{ nev: &quot;Körte&quot; }&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Összefoglalva tehát, &lt;strong&gt;a Javascript-ben kizárólag érték szerinti paraméterátadás van!&lt;/strong&gt; Az objektumoknál a &lt;strong&gt;referenciák másolatai&lt;/strong&gt; érték szerint adódnak át a függvényeknek (az objektum értékei mutálódnak), míg a primitív típusoknál &lt;strong&gt;lokális másolat&lt;/strong&gt; készül a változók értékeiről (az eredeti értékek nem mutálódnak).&lt;/p&gt;

&lt;p&gt;A JS-ben számos implicit (rejtett) típuskonverzió van. A változók típusa változhat a program futása során, amit az implicit típuskonverziók tesznek lehetővé:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;var szam = 101, szoveg = &quot; kiskutya&quot;;
/* A + operátor az n számot sztringgé konvertálja
 * és összefűzi s-sel.
 */
var eredmeny = szam + szoveg;
console.log(eredmeny); //=&amp;gt; 101 kiskutya

/* A '-' operátor a sztringet számmá konvertálja/castolja
 * (ha tudja, különben undefined lesz) és kivonja belőle a 10-et.
 */
var x = &quot;62&quot; - 10; //=&amp;gt; 52

// De explicite mi is végezhetünk típuskonverziót.
var y = &quot;1500&quot;;
y = Number(y); // Számmá castoljuk a sztringet.
console.log(x + y); //=&amp;gt; 1552
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Amikor az egyenlőség és az egyenlőtlenség operátorokat használjuk, akkor életbevágóan fontos tisztában lenni az implicit típuskonverziókkal. Létezik az egyenlőség operátor (&lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;) és a szigorú egyenlőség operátor (&lt;code class=&quot;highlighter-rouge&quot;&gt;===&lt;/code&gt;). Az utóbbi az azonosság szigorú definícióját használja és az alapján határozza meg a két operanduszának az azonosságát. A “sima” egyenlőség operátor (&lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;) sokkal megengedőbb, hiszen engedélyezi a típuskonverziókat. A nemegyenlőség operátorból szintén kettő van: a “sima” (&lt;code class=&quot;highlighter-rouge&quot;&gt;!=&lt;/code&gt;) és szigorú (&lt;code class=&quot;highlighter-rouge&quot;&gt;!==&lt;/code&gt;) változat. Egy rövid kódrészleten bemutatva ez világosabb lesz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(60 == &quot;60&quot;); //=&amp;gt; true, a &quot;60&quot;-ból szám lesz
console.log(60 === &quot;60&quot;); //=&amp;gt; false; szám és sztring különbözik
console.log(1 == true); //=&amp;gt; true
console.log(1 === true); //=&amp;gt; false; szám !== logikai érték
console.log(NaN == NaN); //=&amp;gt; false
console.log(NaN === NaN); //=&amp;gt; false

/* Ezzel a függvénnyel meghatározható, hogy NaN-e a vizsgált érték. */
console.log(isNaN(NaN)); //=&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A NaN érték (not-a-number) a “nem szám” jelölésére való. Akkor kapjuk értékül például, ha számot osztunk sztringgel: &lt;code class=&quot;highlighter-rouge&quot;&gt;10/&quot;a&quot;&lt;/code&gt;. Ez nyilvánvalóan értelmetlen eredményre vezet. A NaN semmilyen másik értékkel, de még önmagával sem azonos!&lt;/p&gt;

&lt;p&gt;A JS-ben az összes számot &lt;strong&gt;64-bites lebegőpontos formátum&lt;/strong&gt;ban reprezentálja az &lt;strong&gt;IEEE 754 szabvány&lt;/strong&gt; szerint. Ez azt jelenti, hogy maximum az olyan nagy számot képes eltárolni, mint a &lt;code class=&quot;highlighter-rouge&quot;&gt;±1.7976931348623157 x 10^308&lt;/code&gt;, és olyan kicsit, mint &lt;code class=&quot;highlighter-rouge&quot;&gt;5 x 10^-324&lt;/code&gt; (
&lt;strong&gt;alulcsordulás&lt;/strong&gt; történik amikor olyan kicsi a szám, hogy a számítógép nem tudja megkülönböztetni a 0-tól). A túlcsordulást szerinten nem kell magyaráznom.
A JavaScript számformátuma pontosan reprezentálja az egész számokat &lt;code class=&quot;highlighter-rouge&quot;&gt;-9007199254740992&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;-2^53&lt;/code&gt;) és &lt;code class=&quot;highlighter-rouge&quot;&gt;9007199254740992&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;2^53&lt;/code&gt;) között. Bizonyos operátorok viszont (mint például a tömbök indexelése vagy a bitenkénti műveletek) 32-bites egész számokkal működnek.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;hexadecimális számok is támogatottak&lt;/strong&gt; az ECMAScript szabványban, viszont az oktális számok nem!&lt;/p&gt;

&lt;p&gt;Legyetek tisztában azzal is, hogy &lt;strong&gt;a lebegőpontos értékek bizonyos esetekben nem pontosak&lt;/strong&gt;, így ne lepődjetek meg, ha ezt tapasztaljátok:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(0.1 + 0.2); //=&amp;gt; 0.30000000000000004
console.log(0.1 + 0.2 == 0.3); //=&amp;gt; false
&lt;/code&gt;&lt;/pre&gt;

&lt;p class=&quot;update&quot;&gt;Apró kiegészítés: két fontos dolgot kell itt pótolnom. Az egyik a változók elnevezési konvenciója. Ha a változó egyszerű szó, akkor nincs probléma, mivel minden betűjét kisbetűvel írjuk. Az összetett szavak esetén az első tagot mindig kisbetűvel írjuk, viszont az utána következő tagokat nagy kezdőbetűvel írjuk: &lt;code class=&quot;highlighter-rouge&quot;&gt;likeThis&lt;/code&gt;, illetve használhatunk egy alulvonást is a tagok elválasztására: &lt;code class=&quot;highlighter-rouge&quot;&gt;like_this&lt;/code&gt;. Ezt nem kötelező betartani, de erősen ajánlott. A másik dolog az úgynevezett &lt;strong&gt;“hamisértékek”&lt;/strong&gt; (falsy values) bevezetése a JS-ben. Ezek közé tartozik: a &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;, a &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;, a &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt;, az &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt;,  az &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&quot;&lt;/code&gt; (üres sztring) és a &lt;code class=&quot;highlighter-rouge&quot;&gt;NaN&lt;/code&gt;. Ezek a kifejezésekben &lt;strong&gt;mindig hamisnak&lt;/strong&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;) &lt;strong&gt;értékelődnek ki&lt;/strong&gt; a szabvány szerint. (2017. augusztus 31.)&lt;/p&gt;

&lt;p&gt;Szerintem ennyi érdekesség elég.&lt;/p&gt;

&lt;p&gt;Egy részbe elég ennyi, majd a folytatom ezt az oktató sorozatot. A következő részekben ezekről tervezek írni:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;a függvényhatókör és blokkhatókör&lt;/li&gt;
  &lt;li&gt;a bezárás (closure)&lt;/li&gt;
  &lt;li&gt;a tömbök és a tömbszerű objektumok&lt;/li&gt;
  &lt;li&gt;hozzáférés az objektum tulajdonságaihoz&lt;/li&gt;
  &lt;li&gt;a &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; érték&lt;/li&gt;
  &lt;li&gt;objektumok és függvények létrehozása&lt;/li&gt;
  &lt;li&gt;a prototípusos öröklés&lt;/li&gt;
  &lt;li&gt;a JSON (JavaScript Object Notation)&lt;/li&gt;
  &lt;li&gt;a RegExp objektumok&lt;/li&gt;
  &lt;li&gt;a funkcionális programozás (&lt;code class=&quot;highlighter-rouge&quot;&gt;map()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;reduce()&lt;/code&gt; és &lt;code class=&quot;highlighter-rouge&quot;&gt;filter()&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;a “use strict” pragma&lt;/li&gt;
  &lt;li&gt;a globális objektum (Window)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ez a cikksorozat csak bevezető jellegű. Ez alapján elindulhattok a JavaScript mélyebb megismeréséhez vezető úton.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;erősen-ajánlott-irodalom&quot;&gt;Erősen ajánlott irodalom&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;David Flanagan (2011). &lt;a href=&quot;http://shop.oreilly.com/product/9780596805531.do&quot;&gt;JavaScript: The Definitive Guide. 6th Edition.&lt;/a&gt; O’Reilly, USA.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 29 Aug 2017 19:49:00 +0200</pubDate>
        <link>http://localhost:4000//tudomany/2017/08/29/javascript_01.html</link>
        <guid isPermaLink="true">http://localhost:4000//tudomany/2017/08/29/javascript_01.html</guid>
      </item>
    
      <item>
        <title>A kommentelési szabályzat és a szerzői jogok</title>
        <description>&lt;p class=&quot;update&quot;&gt;&lt;strong&gt;Frissítés&lt;/strong&gt;: Ha nem tudományos céllal idézel az írásaimból, akkor az idézet mellett kötelező feltüntetni a cikkre mutató linket! Ha a tudományos publikációdhoz idézel részeket, akkor  a tudományos hivatkozás szabályainak megfelelően hivatkozz a cikkre! Például így: &lt;em&gt;Gulácsi A. (2017). A cikk címe. A cikkre mutató weblink.&lt;/em&gt; Teljes cikk átvételéhez a saját írásos beleegyezésem szükséges. A hatályos jogszabály: az &lt;a href=&quot;https://net.jogtar.hu/jr/gen/hjegy_doc.cgi?docid=99900076.TV&quot;&gt;1999. évi LXXVI. törvény a szerzői jogokról.&lt;/a&gt; A bejegyzés címe is módosult. (2017. augusztus 27.)&lt;/p&gt;

&lt;p&gt;Ezeket a kommentelési szabályokat vezetem be a honlapomon:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Csak a témához kötődő hozzászólások engedélyezettek.&lt;/li&gt;
  &lt;li&gt;Pontosan „idézd”, hogy a bejegyzés mely részével (vagy részeivel) nem értesz egyet!&lt;/li&gt;
  &lt;li&gt;A személyeskedést, a trollkodást és a spammelést moderálással szankcionálom.&lt;/li&gt;
  &lt;li&gt;Mindent tudok a csaló érvelési technikákról (szalmabáb és társai). Ne is próbálkozz ilyenekkel!&lt;/li&gt;
  &lt;li&gt;A reklámokat és a nem biztonságos honlapokra mutató linkeket automatikusan eltávolítom. Egyébként lehet hasznos linkeket megosztani.&lt;/li&gt;
  &lt;li&gt;Itt nincsen semmilyen “politikai korrektség” (cenzúra, kettős mérce és társai), mint a liberális oldalakon.&lt;/li&gt;
  &lt;li&gt;Előmoderációt nem alkalmazok. Utólag ellenőrzöm a kommenteket.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;
A fenti pontokban lefektetett szabályok kötelező érvényűek mindenkire, kivétel nélkül.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Kelt: Szeged, 2017. augusztus 18.&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Aug 2017 19:08:00 +0200</pubDate>
        <link>http://localhost:4000//2017/08/18/kommentelesi_szabalyzat.html</link>
        <guid isPermaLink="true">http://localhost:4000//2017/08/18/kommentelesi_szabalyzat.html</guid>
      </item>
    
      <item>
        <title>Hány cigány él Magyarországon?</title>
        <description>&lt;p&gt;A népszámlálások adataiból az derül ki, hogy Magyarországon 2001 és 2011 között 53%-kal, 205 720 főről 315 583 főre nőtt a cigányok száma. A Központi Statisztikai Hivatal (KSH) népszámlálásai a nemzetiségre, az anyanyelvre, a családi, baráti közösségben használt nyelvre, és a kulturális kötődésre kérdeznek rá, de ezekre a válaszadás megtagadható. A nemzetiségi hovatartozásukról nem nyilatkozók száma 2001 és 2011 között két és félszeresére, 543 317 főről 1 398 731 főre emelkedett.&lt;/p&gt;

&lt;p&gt;Az 1. táblázatban az 1893-2003 közötti időszakban végzett mintavételek, cigányösszeírások eredményeit foglaltam össze. A reprezentatív szociológiai mintavételek a cigányok tényleges, a lakókörnyezet minősítése által meghatározott számát becsülték meg 1971-ben, 1993-ban és 2003-ban. Az 1893. évi cigányösszeírás egyedülálló a maga nevében, mivel hazánkban a mai napig nem történt ehhez hasonló, kifejezetten a cigányok számbavételét célzó kutatás.&lt;/p&gt;

&lt;figcaption&gt;
1. táblázat: A magyarországi cigányok száma az 1893. évi cigányösszeírás és a szociológiai adatfelvételek alapján (Kertesi G. – Kézdi G. 1998, Kemény I. 2004). * A trianoni határokon belül.
&lt;/figcaption&gt;
&lt;table&gt;
    &lt;tr&gt;
        &lt;th&gt;Év
        &lt;/th&gt;
        &lt;th&gt;Felmérések, ezer fő (középérték)
        &lt;/th&gt;
        &lt;th&gt;A modell szerint (ezer fő)
        &lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;1893&lt;/td&gt;
        &lt;td&gt;59,982*&lt;/td&gt;
        &lt;td&gt;60&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;1971&lt;/td&gt;
        &lt;td&gt;270-370 (320)&lt;/td&gt;
        &lt;td&gt;300&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;1993&lt;/td&gt;
        &lt;td&gt;449-461 (455)&lt;/td&gt;
        &lt;td&gt;472&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;2003&lt;/td&gt;
        &lt;td&gt;520-650 (585)&lt;/td&gt;
        &lt;td&gt;580&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;2015&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;743&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;2020&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;823&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;A cigányság száma &lt;strong&gt;az elmúlt 110 évben megtízszereződött&lt;/strong&gt;: &lt;strong&gt;60 ezer főről 600 ezer főre gyarapodott 2003-ig&lt;/strong&gt;. 2003-ban az össznépesség 10 millió 142 ezer fő volt, melynek &lt;strong&gt;6%&lt;/strong&gt;-a a cigány nemzetiséghez tartozott. A népszámlálások kétszeresen alábecsülték a magyarországi cigányság tényleges számát!&lt;/p&gt;

&lt;p&gt;A cigányság 2015. évi számának becslésére és 2020-ig való előrejelzésére, egy egyszerű modellt készítettem. A rendelkezésre álló adatfelvételek adatpontjaira egy exponenciális függvényt illesztettem (1. ábra).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/Cigany_modell-min.jpg&quot; alt=&quot;A cigányok számának előrejelzése 2020-ig&quot; class=&quot;image2&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;1. ábra: A cigányfelmérések eredményeire számolt exponenciális függvény (Hablicsek L. 2007). (Az R-ben írt kódot lásd az &lt;a href=&quot;https://github.com/SalsaBoy990/R-codes&quot; target=&quot;_blank&quot;&gt;R-codes&lt;/a&gt; gyűjteményemben.)
&lt;/figcaption&gt;

&lt;p&gt;Szépen látható, hogy a modell teljesen reprodukálja az 1893. évi összeírás értékét (60 ezer fő). &lt;strong&gt;A cigányság 2015-ös létszámára 743 ezer jött ki, míg 2020-ra meg fogja haladni a 800 ezer főt.&lt;/strong&gt; Az 1. táblázatban közöltem a modell alapján visszaszámolt értékeket, amelyek kitűnő egyezést mutatnak a valós értékekkel (r&lt;sup&gt;2&lt;/sup&gt;=0,99, p&amp;lt;0,001).&lt;/p&gt;

&lt;p&gt;A teljes termékenységi arányszám, vagyis az egy szülőképes korú (15-49 év) nőre eső gyerekszám, jó mutatja, hogy 1970 óta a magyar nők kevesebb gyereket szülnek (&lt;strong&gt;a teljes népesség körében 1,3 gyerek/nő&lt;/strong&gt;, de ebbe a cigányok is beletartoznak), mint amennyi a népességszám szinten tartásához (2,1 gyerek/szülőképes nő) elegendő lenne. Ezzel szemben, kizárólag &lt;strong&gt;a cigány nők esetén&lt;/strong&gt;, a termékenységi arányszám még mindig jelentősen meghaladja az átlagot (&lt;strong&gt;3,0&lt;/strong&gt;). A cigányság gyerekszáma gyorsabban nő, mint a magyaroké. A születő magyar gyerekek száma viszont az elöregedő magyar társadalom halálozási ütemét nem képes ellensúlyozni. A cigányság számaránya a népességen belül pedig tovább növekszik, de szerencsére &lt;strong&gt;az utóbbi tíz évben a cigány nők termékenységi arányszáma is lassan csökkenésnek indult&lt;/strong&gt; (2. táblázat).&lt;/p&gt;

&lt;figcaption&gt;
2. táblázat: A teljes női lakosság és a cigány nők termékenységi arányszámai, 1930-31 és 1999-2002 között (Janky B. 2005)
&lt;/figcaption&gt;
&lt;table&gt;
    &lt;tr&gt;
        &lt;th&gt;Időszak
        &lt;/th&gt;
        &lt;th&gt;A teljes lakosság körében
        &lt;/th&gt;
        &lt;th&gt;A cigány nők körében
        &lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;1930-31&lt;/td&gt;
        &lt;td&gt;2,8&lt;/td&gt;
        &lt;td&gt;n/a&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;1969-70&lt;/td&gt;
        &lt;td&gt;2,0&lt;/td&gt;
        &lt;td&gt;n/a&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;1990-93&lt;/td&gt;
        &lt;td&gt;1,8&lt;/td&gt;
        &lt;td&gt;3,3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;1995-98&lt;/td&gt;
        &lt;td&gt;1,4&lt;/td&gt;
        &lt;td&gt;3,3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;1999-2002&lt;/td&gt;
        &lt;td&gt;1,3&lt;/td&gt;
        &lt;td&gt;3,0&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Kizárólag a magyar nők esetén az egy szülőképes nőre jutó gyerekszám katasztrofálisan alacsony: 1,3 alatt van, mivel a cigányok szaporasága javít a statisztikán. Sajnos nem áll rendelkezésemre külön, csak a magyarokra vonatkozó adat. Így is egészen ritka adatokat adok közre.&lt;/p&gt;

&lt;p&gt;A teljes népesség és a cigányság élveszületési számának és arányának változásából kiderül, hogy &lt;strong&gt;2003-ban már minden hatodik újszülött cigány volt&lt;/strong&gt; (3. táblázat) (Kemény I. 2004). A cigányság korösszetétele is teljesen eltér a magyarságétól: &lt;strong&gt;a 15 év alattiak aránya a cigányok esetén megközelíti a 37%-ot&lt;/strong&gt;, míg &lt;strong&gt;a 60 éven felüliek aránya 3,9%&lt;/strong&gt;-ot tesz ki. Ez fiatalos korszerkezetet jelent. Az össznépesség esetén azonban, a cigányokhoz képest, &lt;strong&gt;a 15 éven aluliak aránya kevesebb, mint feleakkora&lt;/strong&gt; (16,1%), illetve &lt;strong&gt;a 60 éven felüliek aránya több, mint ötször akkora&lt;/strong&gt; (20,8%). A tizenöt éven aluliak aránya meghaladja a hatvan éven felüliekét, ami elöregedő korszerkezetre utal (4. táblázat).&lt;/p&gt;

&lt;figcaption&gt;
3. táblázat: Az élveszületések számának és arányának változása a teljes népesség és a cigányság körében 1971-2003 (Kemény I. 2004)
&lt;/figcaption&gt;
&lt;table&gt;
    &lt;tr&gt;
        &lt;th&gt;Év
        &lt;/th&gt;
        &lt;th&gt;A teljes lakosság körében (ezer fő)
        &lt;/th&gt;
        &lt;th&gt;A cigány népesség körében
        &lt;/th&gt;
        &lt;th&gt;A cigány születések aránya
        &lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;1971&lt;/td&gt;
        &lt;td&gt;151&lt;/td&gt;
        &lt;td&gt;10&lt;/td&gt;
        &lt;td&gt;&amp;lt;7%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;1993&lt;/td&gt;
        &lt;td&gt;116&lt;/td&gt;
        &lt;td&gt;13&lt;/td&gt;
        &lt;td&gt;&amp;gt;11%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;2003&lt;/td&gt;
        &lt;td&gt;94,647&lt;/td&gt;
        &lt;td&gt;15&lt;/td&gt;
        &lt;td&gt;15,8%&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
&lt;figcaption&gt;
4. táblázat: A cigány háztartásokban élő és az országos népesség a 0-14 év közötti és a 60 év feletti korcsoportjainak százalékos megoszlása 2003-ban (Kemény I. 2004)
&lt;/figcaption&gt;
&lt;table&gt;
    &lt;tr&gt;
        &lt;th&gt;Korcsoport
        &lt;/th&gt;
        &lt;th&gt;A teljes népesség esetén
        &lt;/th&gt;
        &lt;th&gt;A cigányok körében
        &lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;15 éven aluliak&lt;/td&gt;
        &lt;td&gt;16,1&lt;/td&gt;
        &lt;td&gt;36,8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;60 éven felüliek&lt;/td&gt;
        &lt;td&gt;20,8&lt;/td&gt;
        &lt;td&gt;3,9&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;A könnyebb összehasonlíthatóság kedvéért, a 2-3. ábrákon megjelenítettem a cigány és a magyar korfát a 2001. évi népszámlálás adatainak felhasználásával. Megjegyzés: a vízszintes tengely beosztása a két korfán eltérő. A magyar lakosság esetén 39 év az átlagéletkor, míg a cigányoknál csupán 25.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/Cigany_korfa-min.jpg&quot; alt=&quot;A cigányok számának előrejelzése 2020-ig&quot; class=&quot;image2&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;2. ábra: A cigányságot jellemző korfa piramis alakú (KSH alapján). (Az R-ben írt kódot lásd az &lt;a href=&quot;https://github.com/SalsaBoy990/R-codes&quot; target=&quot;_blank&quot;&gt;R-codes&lt;/a&gt; gyűjteményemben.)
&lt;/figcaption&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/Magyar_korfa-min.jpg&quot; alt=&quot;A cigányok számának előrejelzése 2020-ig&quot; class=&quot;image2&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;3. ábra: A magyarság korfája elöregedő korszerkezetet tükröz, urna alakú (KSH alapján). (Az R-ben írt kódot lásd az &lt;a href=&quot;https://github.com/SalsaBoy990/R-codes&quot; target=&quot;_blank&quot;&gt;R-codes&lt;/a&gt; gyűjteményemben.)
&lt;/figcaption&gt;

&lt;p&gt;&lt;strong&gt;A cigányok 86,9%-ának végzettsége általános iskola&lt;/strong&gt; (8 évfolyam vagy annál kevesebb), &lt;strong&gt;egyetemi, főiskolai végzettséggel mindössze 2607 fő rendelkezett&lt;/strong&gt; 2011-ben (5. táblázat).&lt;/p&gt;

&lt;figcaption&gt;
5. táblázat: A magyar és a cigány népesség megoszlása a legmagasabb befejezett iskolai végzettség szerint, 2011-ben (KSH alapján).
&lt;/figcaption&gt;
&lt;table&gt;
    &lt;tr&gt;
        &lt;th&gt;Legmagasabb iskolai végzettség
        &lt;/th&gt;
        &lt;th&gt;Magyar (%)
        &lt;/th&gt;
        &lt;th&gt;Cigány (%)
        &lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;8 évfolyamnál alacsonyabb&lt;/td&gt;
        &lt;td&gt;18,1&lt;/td&gt;
        &lt;td&gt;47,5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;8 évfolyam&lt;/td&gt;
        &lt;td&gt;23,5&lt;/td&gt;
        &lt;td&gt;39,4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Középfokú iskola érettségi nélkül,
szakmai oklevéllel&lt;/td&gt;
        &lt;td&gt;18,0&lt;/td&gt;
        &lt;td&gt;8,8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Érettségi&lt;/td&gt;
        &lt;td&gt;25,6&lt;/td&gt;
        &lt;td&gt;3,4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Főiskola, egyetem&lt;/td&gt;
        &lt;td&gt;14,7&lt;/td&gt;
        &lt;td&gt;0,8&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;A 6. táblázatból világossá válik, hogy a szocializmus időszakában a cigányok foglalkoztatottsága (különösen a férfiak) jóval magasabb volt, egészen a rendszerváltozásig. Onnantól kezdve drasztikusan leesett a cigányok foglalkoztatottsága, és az adatok szerint 2003-ig változatlan volt. &lt;strong&gt;1987-1993 között a férfiak esetén 45,6, a nők esetén 33, míg együtt 39,4%-kal csökkent a dolgozók aránya.&lt;/strong&gt;&lt;/p&gt;

&lt;figcaption&gt;
6. táblázat: A cigány férfiak és nők foglalkoztatottsága 1971-2003 között százalékban (Janky B. 2005). * Az 1971-es, 1993-as és 2003-as országos reprezentatív cigányvizsgálat alapján. N: a minta nagysága, az adatok a 15–54 éves nők és 15–59 éves férfiak százalékában értendők.
&lt;/figcaption&gt;
&lt;table&gt;
    &lt;tr&gt;
        &lt;th&gt;
        &lt;/th&gt;
        &lt;th&gt;1971
        &lt;/th&gt;
        &lt;th&gt;1978
        &lt;/th&gt;
        &lt;th&gt;1987
        &lt;/th&gt;
        &lt;th&gt;1993
        &lt;/th&gt;
        &lt;th&gt;2003
        &lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Férfiak&lt;/td&gt;
        &lt;td&gt;85,2&lt;/td&gt;
        &lt;td&gt;77,3&lt;/td&gt;
        &lt;td&gt;74,4&lt;/td&gt;
        &lt;td&gt;28,8&lt;/td&gt;
        &lt;td&gt;29,2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Nők&lt;/td&gt;
        &lt;td&gt;30,3&lt;/td&gt;
        &lt;td&gt;47,0&lt;/td&gt;
        &lt;td&gt;49,3&lt;/td&gt;
        &lt;td&gt;16,3&lt;/td&gt;
        &lt;td&gt;16,3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Együtt&lt;/td&gt;
        &lt;td&gt;n/a&lt;/td&gt;
        &lt;td&gt;62,0&lt;/td&gt;
        &lt;td&gt;62,0&lt;/td&gt;
        &lt;td&gt;22,6&lt;/td&gt;
        &lt;td&gt;22,7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;N&lt;/td&gt;
        &lt;td&gt;n/a&lt;/td&gt;
        &lt;td&gt;2875&lt;/td&gt;
        &lt;td&gt;3888&lt;/td&gt;
        &lt;td&gt;4842&lt;/td&gt;
        &lt;td&gt;3081&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;h2 id=&quot;végszó&quot;&gt;Végszó&lt;/h2&gt;
&lt;p&gt;A szocializmus alatt kevés volt a „közveszélyes munkakerülő”. A nehézipar, a bányászat sok alacsonyan képzett munkaerőt szívott fel, ami munkát adott, a cigányoknak is. Viszont a rendszerváltoztatás során szétbomlasztották a magyar ipart, jelentősen megnövelve ezzel a munkanélküliséget. Ma a szociális ellátórendszeren élősködnek az indiából származó cigányok (megélhetési gyerekcsinálók). A cigányokkal pedig csak keményen lehet bánni, hiszen a többségük csak az erőszakból ért.&lt;/p&gt;

&lt;p&gt;A cigányok beilleszkedési képtelenségét a cigányok viselkedésében kell keresni. Nem a magyarok szegregálják a cigányokat, hanem a cigányok magukat, mert &lt;strong&gt;nem akarnak integrálódni&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;A bőnözőket nem luxusbörtönbe kell zárni, hanem kemény munkatáborba, hogy társadalmilag hasznos tevékenységet folytassanak. Ez majd lelohasztja a cigányok bűnözésre való hajlamát.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;felhasznált-irodalom&quot;&gt;Felhasznált irodalom&lt;/h2&gt;

&lt;ul class=&quot;no-decoration-18px&quot;&gt;
    &lt;li&gt;Hablicsek L. (2007). &lt;a href=&quot;http://demografia.hu/kiadvanyokonline/index.php/demografia/article/viewFile/540/483&quot; target=&quot;_blank&quot;&gt;Kísérleti számítások a roma lakosság területi jellemzőinek alakulására és 2021-ig történő előrebecslésére.&lt;/a&gt; – Demográfia 50(1), pp. 7-54. &lt;/li&gt;
    &lt;li&gt;Janky B. (2005). &lt;a href=&quot;www.szmm.gov.hu/download.php?ctag=download&amp;amp;docID=20471&quot; target=&quot;_blank&quot;&gt;A cigány nők társadalmi helyzete és termékenysége.&lt;/a&gt; – In. Nagy I. – Pongrácz T. –Tóth I. Gy. (szerk.): Szerepváltozások. Jelentés a nők és férfiak helyzetéről, 2005. – TÁRKI, Ifjúsági, Családügyi, Szociális és Esélyegyenlőségi Minisztérium, Budapest. pp. 136–148.&lt;/li&gt;
    &lt;li&gt;Kemény I. 2004: &lt;a href=&quot;http://www.demografia.hu/kiadvanyokonline/index.php/demografia/article/download/615/427&quot; target=&quot;_blank&quot;&gt;A magyarországi cigány népesség demográfiája.&lt;/a&gt; – Demográfia 47(3-4), pp. 335-346. &lt;/li&gt;
    &lt;li&gt;Kertesi G. – Kézdi G. 1998: &lt;a href=&quot;http://econ.core.hu/file/download/Kertesi_Kezdi/A_cigany_nepesseg_Mo-n.pdf&quot; target=&quot;_blank&quot;&gt;A cigány népesség Magyarországon.&lt;/a&gt; (Dokumentáció és adattár.) – Socio-typo, Budapest. 467 p. &lt;/li&gt;
    &lt;li&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.nepszamlalas2001.hu/hun/kotetek/04/tabhun/tabl01/load01.html&quot; target=&quot;_blank&quot;&gt;KSH 2001. évi népszámlálás. 1.1.  Nemzetiség.&lt;/a&gt; (letöltve: 2015-05-27)&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.nepszamlalas2001.hu/hun/kotetek/24/tables/loadcig2_1.html&quot; target=&quot;_blank&quot;&gt;KSH 2001. évi népszámlálás. Cigány, roma:
2.1. A népesség korév és nemek szerint, a nemek aránya.&lt;/a&gt; (letöltve: 2015-05-25)&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.nepszamlalas2001.hu/hun/kotetek/24/tables/loadmagy2_1.html&quot; target=&quot;_blank&quot;&gt;KSH 2001. évi népszámlálás. Magyar: 
2.1. A népesség korév és nemek szerint, a nemek aránya.&lt;/a&gt; (letöltve: 2015-05-25)&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.ksh.hu/nepszamlalas/docs/tablak/nemzetiseg/09_02_15_01.xls&quot; target=&quot;_blank&quot;&gt;KSH 2011. évi népszámlálás. 2.15.1. A népesség korcsoport, településtípus és nemek szerint, a nemek aránya, 2011.
&lt;/a&gt; (letöltve: 2015-05-27)&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.ksh.hu/nepszamlalas/docs/tablak/teruleti/00/00_2_1_6_1.xls&quot; target=&quot;_blank&quot;&gt;KSH 2011. évi népszámlálás. 2.1.6.1. A népesség nemzetiség, korcsoport, legmagasabb befejezett iskolai végzettség és nemek szerint, 2011.
&lt;/a&gt; (letöltve: 2015-05-26)&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://www.ksh.hu/nepszamlalas/docs/tablak/nemzetiseg/09_01_01.xls&quot; target=&quot;_blank&quot;&gt;KSH 2011. 1.1. A népesség a nemzetiségi hovatartozást befolyásoló tényezők szerint
&lt;/a&gt; (letöltve: 2015-05-27)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 07 Aug 2017 17:27:00 +0200</pubDate>
        <link>http://localhost:4000//tudomany/2017/08/07/ciganyok_magyarorszagon.html</link>
        <guid isPermaLink="true">http://localhost:4000//tudomany/2017/08/07/ciganyok_magyarorszagon.html</guid>
      </item>
    
  </channel>
</rss>